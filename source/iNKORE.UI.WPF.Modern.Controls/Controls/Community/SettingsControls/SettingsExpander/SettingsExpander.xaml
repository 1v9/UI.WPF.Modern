<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers;assembly=iNKORE.UI.WPF.Modern"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern.Controls;component/Controls/Community/SettingsControls/SettingsCard/SettingsCard.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/Controls/Expander.xaml" />
        <ResourceDictionary Source="/iNKORE.UI.WPF.Modern;component/Themes/ThemeResources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <CornerRadiusConverter x:Key="CornerRadiusConverter" />

    <Style
        x:Key="DefaultSettingsExpanderItemStyle"
        BasedOn="{StaticResource DefaultSettingsCardStyle}"
        TargetType="local:SettingsCard">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="{DynamicResource SettingsExpanderItemBorderThickness}" />
            <Setter Property="MinHeight" Value="52" />
            <Setter Property="Padding" Value="{DynamicResource SettingsExpanderItemPadding}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />

        </Style.Setters>
    </Style>

    <Style
        x:Key="ClickableSettingsExpanderItemStyle"
        BasedOn="{StaticResource DefaultSettingsExpanderItemStyle}"
        TargetType="local:SettingsCard">
        <Style.Setters>
            <Setter Property="Padding" Value="{DynamicResource ClickableSettingsExpanderItemPadding}" />
        </Style.Setters>
    </Style>

    <local:SettingsExpanderItemStyleSelector
        x:Key="SettingsExpanderItemStyleSelector"
        ClickableStyle="{StaticResource ClickableSettingsExpanderItemStyle}"
        DefaultStyle="{StaticResource DefaultSettingsExpanderItemStyle}" />

    <Style x:Key="SettingsExpanderHeaderDownStyle" TargetType="ToggleButton">
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <!--<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ui:ContentPresenterEx
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border
                                x:Name="ExpandCollapseChevronBorder"
                                Grid.Column="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}"
                                Margin="{DynamicResource ExpanderChevronHorizontalMargin}"
                                Background="{DynamicResource ExpanderChevronBackground}"
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <ui:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}"
                                    Height="{DynamicResource ExpanderChevronGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                    FontSize="12"
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    Glyph="{DynamicResource ExpanderChevronDownGlyph}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    SnapsToDevicePixels="false">
                                    <ui:FontIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </ui:FontIcon.RenderTransform>
                                </ui:FontIcon>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ikw:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
    <ikw:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />
    <ikw:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />
    <ikw:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="Left" />

    <Style x:Key="SettingsExpanderExpanderStyle"
           TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource ExpanderContentBackground}" />
        <Setter Property="MinWidth" Value="{DynamicResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0"
                                           Height="Auto" />
                            <RowDefinition x:Name="Row1"
                                           Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="ExpandUp">
                                    <VisualState.Storyboard>
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHeader"
                                                Storyboard.TargetProperty="(ui:ControlHelper.CornerRadius)">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                            </ObjectAnimationUsingKeyFrames>


                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContentTranslation"
                                                                           Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseDown">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContentTranslation"
                                                                           Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.167"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandDown">
                                    <VisualState.Storyboard>
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHeader"
                                                Storyboard.TargetProperty="(ui:ControlHelper.CornerRadius)">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContentTranslation"
                                                                           Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0, 0.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.333"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            
                                            
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="CollapseUp">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.167"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContentTranslation"
                                                                           Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="1.0, 1.0, 0.0, 1.0"
                                                                      KeyTime="0:0:0.167"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeContentHeight}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="Down" />
                                <VisualState x:Name="Up">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHeader"
                                            Storyboard.TargetProperty="Style">
                                            <!--<DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{StaticResource ExpanderHeaderUpStyle}" />-->
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                            Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{DynamicResource ExpanderContentUpBorderThickness}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent"
                                            Storyboard.TargetProperty="(ui:ControlHelper.CornerRadius)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHeader"
                                            Storyboard.TargetProperty="Grid.Row">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContentClip"
                                            Storyboard.TargetProperty="Grid.Row">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Row0"
                                            Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>*</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Row1"
                                            Storyboard.TargetProperty="Height">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ExpanderHeader"
                                      MinHeight="{TemplateBinding MinHeight}"
                                      Padding="{DynamicResource SettingsExpanderHeaderPadding}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="{StaticResource ExpanderHeaderHorizontalContentAlignment}"
                                      VerticalContentAlignment="{StaticResource ExpanderHeaderVerticalContentAlignment}"
                                      AutomationProperties.AutomationId="ExpanderToggleButton"
                                      AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                      BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                      BorderThickness="{DynamicResource ExpanderHeaderBorderThickness}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      ui:ControlHelper.CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{TemplateBinding IsEnabled}"
                                      IsTabStop="True"
                                      Style="{StaticResource SettingsExpanderHeaderDownStyle}" />
                        <!--  The clip is a composition clip applied in code  -->
                        <Border x:Name="ExpanderContentClip"
                                Grid.Row="1">
                            <Border x:Name="ExpanderContent"
                                    MinHeight="{DynamicResource SettingsExpanderContentMinHeight}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{StaticResource ExpanderContentDownBorderThickness}"
                                    CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                    Visibility="Collapsed">
                                <FrameworkElement.RenderTransform>
                                    <TranslateTransform x:Name="ExpanderContentTranslation"/>
                                </FrameworkElement.RenderTransform>
                                <ui:ContentPresenterEx Margin="0,-2,0,0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSettingsExpanderStyle" TargetType="local:SettingsExpander">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource SettingsCardBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource SettingsCardForeground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SettingsCardBorderBrush}" />
            <Setter Property="BorderThickness" Value="{DynamicResource SettingsCardBorderThickness}" />
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
            <Setter Property="MinHeight" Value="{DynamicResource SettingsCardMinHeight}" />
            <Setter Property="MinWidth" Value="{DynamicResource SettingsCardMinWidth}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <!--<Setter Property="BackgroundSizing" Value="InnerBorderEdge" />-->
            <Setter Property="Padding" Value="{DynamicResource SettingsExpanderHeaderPadding}" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <!--<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />-->
            <Setter Property="ItemContainerStyleSelector" Value="{StaticResource SettingsExpanderItemStyleSelector}" />
            <!--<Setter Property="FocusVisualMargin" Value="-3" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:SettingsExpander">
                        <Expander
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsExpanded="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource SettingsExpanderExpanderStyle}">
                            <Expander.Header>
                                <local:SettingsCard
                                    Padding="{StaticResource SettingsExpanderHeaderPadding}"
                                    VerticalAlignment="Center"
                                    Background="{x:Null}"
                                    BorderThickness="0"
                                    Content="{TemplateBinding Content}"
                                    Description="{TemplateBinding Description}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Header="{TemplateBinding Header}"
                                    HeaderIcon="{TemplateBinding HeaderIcon}"
                                    IsClickEnabled="False" />
                            </Expander.Header>
                            <Expander.Content>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Content="{TemplateBinding ItemsHeader}" />
                                    <local:ItemsRepeater
                                        x:Name="PART_ItemsRepeater"
                                        Grid.Row="1"
                                        ItemTemplate="{Binding ItemTemplate, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <local:ItemsRepeater.Layout>
                                            <local:StackLayout Orientation="Vertical" />
                                        </local:ItemsRepeater.Layout>
                                    </local:ItemsRepeater>
                                    <!--<ItemsPresenter Grid.Row="1" />-->

                                    <ContentPresenter Grid.Row="2" Content="{TemplateBinding ItemsFooter}" />
                                </Grid>
                            </Expander.Content>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--  Implicitly applied default style  -->
    <Style BasedOn="{StaticResource DefaultSettingsExpanderStyle}" TargetType="local:SettingsExpander" />
</ResourceDictionary>