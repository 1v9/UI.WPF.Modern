<!--
    This code was generated by a tool.
    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
-->
<!--
Source files:
Controls\AcrylicPanel.xaml
Controls\AnimatedVisualSource.xaml
Controls\Frame.xaml
Controls\Page.xaml
Controls\Primitives\TitleBarButton.xaml
Controls\Primitives\TitleBarControl.xaml
Themes\CustomControlStuff.xaml
Themes\FontIconFallback.xaml
Themes\ListViewHeaderItem.xaml
Themes\Styles\ContextMenu.xaml
Themes\TextContextMenu.xaml
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers" xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls" xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:converters="clr-namespace:iNKORE.UI.WPF.Modern.Common.Converters" xmlns:ui="clr-namespace:iNKORE.UI.WPF.Modern.Controls">
  <Style x:Key="AcrylicContentControlStyle" TargetType="ContentControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Border x:Name="ContextMenuBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <!--  Color tint overlay  -->
              <Border x:Name="TintColorLayer" Background="{TemplateBinding local:AcrylicElement.TintColor,                                                              Converter={StaticResource ColorToSolidColorBrushConverter}}" CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}" Opacity="{TemplateBinding local:AcrylicElement.TintOpacity}" />
              <!--  Tiled noise texture  -->
              <Border x:Name="NoiseLayer" CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}" Opacity="{TemplateBinding local:AcrylicElement.NoiseOpacity}">
                <Border.Background>
                  <ImageBrush ImageSource="/iNKORE.UI.WPF.Modern;component/Resources/Images/NoiseAsset_256X256_PNG.png" Stretch="None" TileMode="Tile" Viewport="0,0,128,128" ViewportUnits="Absolute" />
                </Border.Background>
              </Border>
              <ContentPresenter />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:AnimatedVisualSource">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AnimatedVisualSource">
          <Grid />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:Frame">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Frame">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True">
            <Grid>
              <ContentPresenter x:Name="FirstContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{x:Null}" />
              <ContentPresenter x:Name="SecondContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{x:Null}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <sys:Double x:Key="{x:Static primitives:TitleBar.HeightKey}">32</sys:Double>
  <StreamGeometry x:Key="ChromeClose">M 11.416016 10 L 20 18.583984 L 18.583984 20 L 10 11.416016 L 1.416016 20 L 0 18.583984 L 8.583984 10 L 0 1.416016 L 1.416016 0 L 10 8.583984 L 18.583984 0 L 20 1.416016 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeMinimize">M 20 8 L 20 10 L 0 10 L 0 8 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeMaximize">M 20 0 L 20 20 L 0 20 L 0 0 Z M 18 2 L 2 2 L 2 18 L 18 18 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeRestore">M 20 16 L 16 16 L 16 20 L 0 20 L 0 4 L 4 4 L 4 0 L 20 0 Z M 14 6 L 2 6 L 2 18 L 14 18 Z M 18 2 L 6 2 L 6 4 L 16 4 L 16 14 L 18 14 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeCloseContrast">M 20 2.832031 L 12.832031 10 L 20 17.167969 L 17.167969 20 L 10 12.832031 L 2.832031 20 L 0 17.167969 L 7.167969 10 L 0 2.832031 L 2.832031 0 L 10 7.167969 L 17.167969 0 L 20 2.832031 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeMinimizeContrast">M 0 8 L 20 8 L 20 12 L 0 12 L 0 8 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeMaximizeContrast">M 0 0 L 20 0 L 20 20 L 0 20 Z M 16 16 L 16 4 L 4 4 L 4 16 Z</StreamGeometry>
  <StreamGeometry x:Key="ChromeRestoreContrast">M 20 0 L 20 14 L 14 14 L 14 20 L 0 20 L 0 6 L 6 6 L 6 0 Z M 10 16 L 10 10 L 4 10 L 4 16 Z M 16 10 L 16 4 L 10 4 L 10 6 L 14 6 L 14 10 Z</StreamGeometry>
  <DataTemplate x:Key="IconTemplate">
    <ui:FontIconFallback Data="{Binding}" />
  </DataTemplate>
  <converters:CornerRadiusFilterConverter x:Key="cornerRadiusFilterConverter_Bottom" Filter="Bottom" />
  <converters:ThicknessFilterConverter x:Key="thicknessFilterConverter_ExcludeTop" Filter="ExcludeTop" />
  <Style TargetType="ui:ElevationBorder">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ui:ElevationBorder">
            <Grid x:Name="Canvas_Root">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
              <Border x:Name="Border_Elevation" BorderBrush="{TemplateBinding ElevationBrush}" BorderThickness="{TemplateBinding BorderThickness,                                                                   Converter={StaticResource thicknessFilterConverter_ExcludeTop}}" CornerRadius="{TemplateBinding CornerRadius,                                                                Converter={StaticResource cornerRadiusFilterConverter_Bottom}}" />
              <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator>
                  <ContentPresenter />
                </AdornerDecorator>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsElevationEnabled" Value="False">
                <Setter TargetName="Border_Elevation" Property="Visibility" Value="Collapsed" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style TargetType="local:FontIconFallback">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FontIconFallback">
          <Viewbox Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            <Path Width="20" Height="20" Data="{TemplateBinding Data}" Fill="{TemplateBinding Foreground}" />
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ui:TextContextMenu x:Key="TextControlContextMenu" x:Shared="False" />
  <Style x:Key="DefaultAcrylicPanelStyle" TargetType="local:AcrylicPanel">
    <Setter Property="TintColor" Value="{DynamicResource SolidBackgroundFillColorQuarternary}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AcrylicPanel">
          <Grid x:Name="Grid_Root" ClipToBounds="True">
            <!--<Grid.OpacityMask>
                            <VisualBrush Stretch="None">
                                <VisualBrush.Visual>
                                    <Border CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:AcrylicPanel}}" Width="{Binding ElementName=Grid_Root, Path=ActualWidth}" Height="{Binding ElementName=Grid_Root, Path=ActualHeight}" Background="Black"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Grid.OpacityMask>-->
            <!--  background  -->
            <Border CornerRadius="{TemplateBinding CornerRadius}">
              <Border.Background>
                <PriorityBinding>
                  <Binding Path="Target.Background" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                  <Binding Path="Target.Fill" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </PriorityBinding>
              </Border.Background>
            </Border>
            <!--  main  -->
            <ui:ClippingBorder CornerRadius="{TemplateBinding CornerRadius}">
              <Canvas>
                <ContentControl chelper:ControlHelper.CornerRadius="{TemplateBinding CornerRadius}">
                  <ContentControl.Template>
                    <ControlTemplate TargetType="ContentControl">
                      <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                          <ContentPresenter />
                        </AdornerDecorator>
                      </Border>
                    </ControlTemplate>
                  </ContentControl.Template>
                  <ContentControl.CacheMode>
                    <BitmapCache RenderAtScale="0.2" />
                  </ContentControl.CacheMode>
                  <Border x:Name="Rect" Width="{Binding Target.ActualWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding Target.ActualHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" ClipToBounds="False" IsHitTestVisible="False">
                    <Border.Background>
                      <VisualBrush AlignmentX="Left" AlignmentY="Top" Stretch="None" ViewboxUnits="Absolute" Visual="{Binding Target, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Border.Background>
                    <Border.RenderTransform>
                      <MultiBinding Converter="{StaticResource BrushTranslationConverter}">
                        <Binding Path="Target" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                        <Binding Path="Source" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                      </MultiBinding>
                    </Border.RenderTransform>
                    <Border.Effect>
                      <BlurEffect Radius="{Binding Amount, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Border.Effect>
                  </Border>
                </ContentControl>
              </Canvas>
            </ui:ClippingBorder>
            <ContentControl chelper:ControlHelper.CornerRadius="{TemplateBinding CornerRadius}" Style="{StaticResource AcrylicContentControlStyle}">
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultAcrylicPanelStyle}" TargetType="local:AcrylicPanel" />
  <Style TargetType="local:AnimatedBackVisualSource">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:AnimatedBackVisualSource">
          <ControlTemplate.Resources>
            <Geometry x:Key="PathIconData">M10.7327 19.7905C11.0326 20.0762 11.5074 20.0646 11.7931 19.7647C12.0788 19.4648 12.0672 18.99 11.7673 18.7043L5.51587 12.7497L20.25 12.7497C20.6642 12.7497 21 12.4139 21 11.9997C21 11.5855 20.6642 11.2497 20.25 11.2497L5.51577 11.2497L11.7673 5.29502C12.0672 5.00933 12.0787 4.5346 11.7931 4.23467C11.5074 3.93475 11.0326 3.9232 10.7327 4.20889L3.31379 11.2756C3.14486 11.4365 3.04491 11.6417 3.01393 11.8551C3.00479 11.9019 3 11.9503 3 11.9997C3 12.0493 3.00481 12.0977 3.01398 12.1446C3.04502 12.3579 3.14496 12.563 3.31379 12.7238L10.7327 19.7905Z</Geometry>
          </ControlTemplate.Resources>
          <Grid x:Name="RootGrid">
            <ui:PathIcon x:Name="Icon" ClipToBounds="True" Data="{StaticResource PathIconData}" Foreground="{TemplateBinding Foreground}">
              <ui:PathIcon.RenderTransform>
                <TranslateTransform x:Name="TranslateTransform" />
              </ui:PathIcon.RenderTransform>
            </ui:PathIcon>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="StateGroup">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslateTransform" Storyboard.TargetProperty="X">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.375" Value="0" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslateTransform" Storyboard.TargetProperty="X">
                      <LinearDoubleKeyFrame KeyTime="0:0:0.375" Value="5" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:Page">
    <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Page">
          <Border Background="{TemplateBinding Background}">
            <ContentPresenter Content="{TemplateBinding Content}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:TitleBarButton">
    <Setter Property="Background" Value="{DynamicResource TitleBarButtonBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
    <Setter Property="InactiveBackground" Value="{DynamicResource TitleBarButtonBackgroundInactive}" />
    <Setter Property="InactiveForeground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
    <Setter Property="HoverBackground" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
    <Setter Property="HoverForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
    <Setter Property="PressedBackground" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
    <Setter Property="PressedForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
    <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
    <Setter Property="FontSize" Value="10" />
    <!--<Setter Property="Height" Value="{DynamicResource {x:Static primitives:TitleBar.HeightKey}}" />-->
    <Setter Property="Width" Value="46" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:TitleBarButton">
          <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsActive" Value="False">
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveBackground}" />
              <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InactiveForeground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackground}" />
              <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedBackground}" />
              <Setter TargetName="Content" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PressedForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="RootGrid" Property="Background" Value="{DynamicResource SystemControlDisabledTransparentBrush}" />
              <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="primitives:TitleBarControl">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="primitives:TitleBarControl">
          <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="HighContrastBackground" Grid.ColumnSpan="3" Fill="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" Visibility="Collapsed" />
            <StackPanel x:Name="PART_LeftSystemOverlay" Orientation="Horizontal">
              <primitives:TitleBarButton x:Name="PART_BackButton" Height="{TemplateBinding Height}" AutomationProperties.Name="Back" Command="{TemplateBinding BackButtonCommand}" CommandParameter="{TemplateBinding BackButtonCommandParameter}" CommandTarget="{TemplateBinding BackButtonCommandTarget}" IsActive="{TemplateBinding IsActive}" IsEnabled="{TemplateBinding IsBackEnabled}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding BackButtonStyle}" Visibility="Collapsed" />
            </StackPanel>
            <StackPanel x:Name="IconTitlePanel" Grid.Column="1" Orientation="Horizontal">
              <Image x:Name="Icon" Width="{DynamicResource {x:Static SystemParameters.SmallIconWidthKey}}" Height="{DynamicResource {x:Static SystemParameters.SmallIconHeightKey}}" Margin="10,0,0,0" VerticalAlignment="Center" Source="{TemplateBinding ActualIcon}" Visibility="Collapsed" />
              <TextBlock x:Name="Title" Margin="12,0,12,0" VerticalAlignment="Center" Background="{x:Null}" FontSize="12" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Title}" TextTrimming="CharacterEllipsis">
                <TextBlock.RenderTransform>
                  <TranslateTransform Y="-1" />
                </TextBlock.RenderTransform>
              </TextBlock>
            </StackPanel>
            <StackPanel x:Name="PART_RightSystemOverlay" Grid.Column="2" Orientation="Horizontal">
              <primitives:TitleBarButton x:Name="MinimizeButton" AutomationProperties.Name="Minimize" Command="{x:Static SystemCommands.MinimizeWindowCommand}" Content="{StaticResource ChromeMinimize}" ContentTemplate="{StaticResource IconTemplate}" IsActive="{TemplateBinding IsActive}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}" />
              <primitives:TitleBarButton x:Name="MaximizeRestoreButton" Height="{Binding ElementName=PART_RightSystemOverlay, Path=ActualHeight}" AutomationProperties.Name="Maximize" Command="{x:Static SystemCommands.MaximizeWindowCommand}" Content="{StaticResource ChromeMaximize}" ContentTemplate="{StaticResource IconTemplate}" IsActive="{TemplateBinding IsActive}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}" />
              <primitives:TitleBarButton x:Name="CloseButton" AutomationProperties.Name="Close" Command="{x:Static SystemCommands.CloseWindowCommand}" Content="{StaticResource ChromeClose}" ContentTemplate="{StaticResource IconTemplate}" HoverBackground="#E81123" HoverForeground="{DynamicResource SystemControlBackgroundChromeWhiteBrush}" IsActive="{TemplateBinding IsActive}" PressedBackground="#F1707A" PressedForeground="{DynamicResource SystemControlBackgroundChromeWhiteBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{TemplateBinding ButtonStyle}" />
            </StackPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <!--<Trigger Property="MaximizeButtonTouchOptimize" Value="False">
                            <Setter TargetName="CloseButton" Property="Height" Value="{Binding ElementName=PART_RightSystemOverlay, Path=ActualHeight}"/>
                            <Setter TargetName="MaximizeRestoreButton" Property="Height" Value="{Binding ElementName=PART_RightSystemOverlay, Path=ActualHeight}"/>
                            <Setter TargetName="MinimizeButton" Property="Height" Value="{Binding ElementName=PART_RightSystemOverlay, Path=ActualHeight}"/>
                        </Trigger>-->
            <Trigger Property="IsActive" Value="False">
              <Setter TargetName="LayoutRoot" Property="Background" Value="{Binding InactiveBackground, RelativeSource={RelativeSource TemplatedParent}}" />
              <Setter TargetName="HighContrastBackground" Property="Fill" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
              <Setter TargetName="Title" Property="Foreground" Value="{Binding InactiveForeground, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <Trigger Property="ExtendViewIntoTitleBar" Value="True">
              <Setter TargetName="LayoutRoot" Property="Background" Value="{x:Null}" />
              <Setter TargetName="IconTitlePanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsBackButtonVisible" Value="True">
              <Setter TargetName="PART_BackButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsIconVisible" Value="True">
              <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
              <Setter TargetName="Title" Property="Margin" Value="5,0,12,0" />
            </Trigger>
            <DataTrigger Binding="{Binding WindowStyle, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="ToolWindow">
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MaximizeRestoreButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="NoResize">
              <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="MaximizeRestoreButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="CanMinimize">
              <Setter TargetName="MaximizeRestoreButton" Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
              <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeRestore}" />
              <Setter TargetName="MaximizeRestoreButton" Property="Command" Value="{x:Static SystemCommands.RestoreWindowCommand}" />
              <Setter TargetName="MaximizeRestoreButton" Property="AutomationProperties.Name" Value="Restore" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
              <Setter TargetName="PART_BackButton" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}" />
              <Setter TargetName="MinimizeButton" Property="Content" Value="{StaticResource ChromeMinimizeContrast}" />
              <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeMaximizeContrast}" />
              <Setter TargetName="CloseButton" Property="Content" Value="{StaticResource ChromeCloseContrast}" />
              <Setter TargetName="CloseButton" Property="HoverBackground" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
              <Setter TargetName="CloseButton" Property="HoverForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
              <Setter TargetName="CloseButton" Property="PressedBackground" Value="{DynamicResource SystemControlHighlightListMediumBrush}" />
              <Setter TargetName="CloseButton" Property="PressedForeground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                <Condition Binding="{Binding ExtendViewIntoTitleBar, RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="HighContrastBackground" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="MaximizeRestoreButton" Property="Content" Value="{StaticResource ChromeRestoreContrast}" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="local:ListViewHeaderItem">
    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource ListViewHeaderItemThemeFontSize}" />
    <Setter Property="Background" Value="{DynamicResource ListViewHeaderItemBackground}" />
    <Setter Property="Margin" Value="0,0,0,4" />
    <Setter Property="Padding" Value="12,8,12,0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="MinHeight" Value="{DynamicResource ListViewHeaderItemMinHeight}" />
    <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ListViewHeaderItem">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}" SnapsToDevicePixels="True">
            <StackPanel>
              <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <Rectangle Height="1" Margin="12,8,12,0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Stroke="{DynamicResource ListViewHeaderItemDividerStroke}" StrokeThickness="0.5" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuStyleBase" TargetType="ContextMenu">
    <Setter Property="Background" Value="{DynamicResource MenuFlyoutPresenterBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource MenuFlyoutPresenterBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}" />
    <Setter Property="Padding" Value="{DynamicResource MenuFlyoutPresenterThemePadding}" />
    <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
    <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
    <!--<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />-->
    <!--<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />-->
    <!--<Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />-->
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="MaxWidth" Value="{DynamicResource FlyoutThemeMaxWidth}" />
    <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
    <Setter Property="chelper:ControlHelper.CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContextMenu">
          <primitives:ThemeShadowChrome x:Name="Shdw" CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}" IsShadowEnabled="{TemplateBinding HasDropShadow}" SnapsToDevicePixels="True">
            <Border MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
              <ui:ScrollViewerEx x:Name="ContextMenuScrollViewer" MinWidth="{DynamicResource FlyoutThemeMinWidth}" Margin="{TemplateBinding Padding}" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,                                                                               TypeInTargetAssembly={x:Type FrameworkElement}}}">
                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" RenderOptions.ClearTypeHint="Enabled" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ui:ScrollViewerEx>
            </Border>
          </primitives:ThemeShadowChrome>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultContextMenuStyle" BasedOn="{StaticResource ContextMenuStyleBase}" TargetType="ContextMenu">
    <Setter Property="OverridesDefaultStyle" Value="True" />
  </Style>
  <Style BasedOn="{StaticResource DefaultContextMenuStyle}" TargetType="ContextMenu" />
  <Style BasedOn="{StaticResource ContextMenuStyleBase}" TargetType="local:TextContextMenu" />
</ResourceDictionary>